{"version":3,"file":"xxhash.js","sources":["../../src/hash/xxhash.ts"],"sourcesContent":["//@ts-ignore\nimport { default as xxhashNew } from \"../patched_xxhash_wasm/xxhash-wasm.js\";\nimport type { XXHashAPI } from \"xxhash-wasm-102\";\nimport { Logger, LOG_LEVEL_VERBOSE } from \"../common/logger.js\";\nimport { fallbackMixedHashEach } from \"./purejs.js\";\n\nexport { xxhashNew };\n\n// Default hash function (Initialised to fallback once).\n// This will be updated to xxhash once it is initialised (on initHashFunc).\nlet hashFunc: (input: string, seed?: number) => string = (str) => fallbackMixedHashEach(str);\n\nasync function initHashFunc() {\n    try {\n        const { h32ToString } = await (xxhashNew as unknown as () => Promise<XXHashAPI>)();\n        hashFunc = h32ToString;\n        Logger(`xxhash for plugin initialised`, LOG_LEVEL_VERBOSE);\n    } catch (ex) {\n        Logger(`Could not initialise xxhash. fallback...`, LOG_LEVEL_VERBOSE);\n        Logger(ex);\n        hashFunc = (str) => fallbackMixedHashEach(str);\n\n    }\n    return hashFunc;\n}\n\n// And, here to initialise the hash function\nvoid initHashFunc();\n\n/**\n * Calculates the digest hash of an array of strings using prepared hash function.\n * \n * @param src - The array of strings to calculate the hash for.\n * @returns The digest hash of the input array.\n */\nexport function digestHash(src: string[]): string {\n    let hash = \"\";\n    for (const v of src) {\n        hash = hashFunc(hash + v);\n    }\n    if (hash == \"\") {\n        return hashFunc(\"**\");\n    }\n    return hash;\n}\n\n"],"names":["xxhashNew"],"mappings":";;;;AAAA;AAQA;AACA;AACA,IAAI,QAAQ,GAA6C,CAAC,GAAG,KAAK,qBAAqB,CAAC,GAAG,CAAC;AAE5F,eAAe,YAAY,GAAA;AACvB,IAAA,IAAI;AACA,QAAA,MAAM,EAAE,WAAW,EAAE,GAAG,MAAOA,CAAiD,EAAE;QAClF,QAAQ,GAAG,WAAW;AACtB,QAAA,MAAM,CAAC,CAAA,6BAAA,CAA+B,EAAE,iBAAiB,CAAC;;IAC5D,OAAO,EAAE,EAAE;AACT,QAAA,MAAM,CAAC,CAAA,wCAAA,CAA0C,EAAE,iBAAiB,CAAC;QACrE,MAAM,CAAC,EAAE,CAAC;QACV,QAAQ,GAAG,CAAC,GAAG,KAAK,qBAAqB,CAAC,GAAG,CAAC;;AAGlD,IAAA,OAAO,QAAQ;AACnB;AAEA;AACA,KAAK,YAAY,EAAE;AAEnB;;;;;AAKG;AACG,SAAU,UAAU,CAAC,GAAa,EAAA;IACpC,IAAI,IAAI,GAAG,EAAE;AACb,IAAA,KAAK,MAAM,CAAC,IAAI,GAAG,EAAE;AACjB,QAAA,IAAI,GAAG,QAAQ,CAAC,IAAI,GAAG,CAAC,CAAC;;AAE7B,IAAA,IAAI,IAAI,IAAI,EAAE,EAAE;AACZ,QAAA,OAAO,QAAQ,CAAC,IAAI,CAAC;;AAEzB,IAAA,OAAO,IAAI;AACf;;;;"}