{"version":3,"file":"SimpleStoreIDB.js","sources":["../../src/databases/SimpleStoreIDB.ts"],"sourcesContent":["import { deleteDB, openDB, type IDBPDatabase } from \"idb\";\nimport { SimpleStoreBase } from \"./SimpleStoreBase\";\nimport { fireAndForget } from \"../promises\";\n\n/**\n * Represents a simple store using IndexedDB.\n * @template T - The type of the values stored in the store.\n */\nexport class SimpleStoreIDB<T> extends SimpleStoreBase<T> {\n\n    name: string;\n    constructor(name: string) {\n        super();\n        this.name = name;\n        this.initDB(name);\n    }\n    db?: Promise<IDBPDatabase<any>>;\n\n    initDB(name: string) {\n        this.db = openDB(name, 1, {\n            upgrade(db) {\n                db.createObjectStore(name);\n            },\n        });\n    }\n\n    async get(key: string): Promise<T | undefined> {\n        if (this.db == undefined) throw new Error(\"Database not initialized or already destroyed\");\n        return await (await this.db).get(this.name, key);\n    }\n\n    async set(key: string, value: T): Promise<void> {\n        if (this.db == undefined) throw new Error(\"Database not initialized or already destroyed\");\n        return await (await this.db).put(this.name, value, key);\n    }\n\n    async delete(key: string): Promise<void> {\n        if (this.db == undefined) throw new Error(\"Database not initialized or already destroyed\");\n        return await (await this.db).delete(this.name, key);\n    }\n    async keys(from?: string | undefined, to?: string | undefined, count?: number | undefined): Promise<string[]> {\n        if (this.db == undefined) throw new Error(\"Database not initialized or already destroyed\");\n        const range = from && to ? IDBKeyRange.bound(from, to) : from ? IDBKeyRange.lowerBound(from) : to ? IDBKeyRange.upperBound(to) : undefined;\n        return await (await this.db).getAllKeys(this.name, range, count);\n    }\n    async keysIDB(query?: IDBValidKey | IDBKeyRange, count?: number): Promise<IDBValidKey[]> {\n        if (this.db == undefined) throw new Error(\"Database not initialized or already destroyed\");\n        return await (await this.db).getAllKeys(this.name, query, count);\n    }\n\n    async clear(): Promise<void> {\n        if (this.db == undefined) throw new Error(\"Database not initialized or already destroyed\");\n        return (await this.db).clear(this.name);\n    }\n\n    close(): void {\n        fireAndForget(async () => {\n            if (this.db == undefined) throw new Error(\"Database not initialized or already destroyed\");\n            (await this.db).close()\n            this.db = undefined!;\n        });\n    }\n\n\n    async destroy(): Promise<void> {\n        if (this.db == undefined) throw new Error(\"Database not initialized or already destroyed\");\n        (await this.db).close()\n        this.db = undefined!;\n        return await deleteDB(this.name);\n    }\n}\n"],"names":[],"mappings":"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"}