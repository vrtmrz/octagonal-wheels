{"version":3,"file":"promises.js","sources":["../src/promises.ts"],"sourcesContent":["\n/**\n * Delays the execution of a function by the specified number of milliseconds.\n * @param ms - The number of milliseconds to delay the execution.\n * @param result - The optional result value to be resolved with after the delay.\n * @returns A promise that resolves with the specified result value after the delay.\n */\nexport const delay = <T>(ms: number, result?: T): Promise<T> => {\n    return new Promise((res) => {\n        setTimeout(() => {\n            res(result!);\n        }, ms);\n    });\n};\n\nexport type PromiseWithResolvers<T> = {\n    promise: Promise<T>;\n    resolve: (value: T | PromiseLike<T>) => void;\n    reject: (reason?: any) => void;\n}\n\n/**\n * Creates a promise and returns it along with the resolve and reject functions.\n * @returns An object containing the promise, resolve, and reject functions.\n * @typeparam T The type of the promise value.\n */\nfunction polyfillPromiseWithResolvers<T>(): PromiseWithResolvers<T> {\n    let resolve!: Parameters<ConstructorParameters<typeof Promise<T>>[0]>[0];\n    let reject!: Parameters<ConstructorParameters<typeof Promise<T>>[0]>[1];\n    const promise = new Promise<T>((res, rej) => {\n        resolve = res;\n        reject = rej;\n    });\n    return { promise, resolve, reject }\n}\n\n/**\n * Creates a promise with custom resolvers.\n * @param {Function} polyfillPromiseWithResolvers - The function that polyfills the promise with resolvers.\n * @returns {Promise} - The promise with custom resolvers.\n */\nexport const promiseWithResolver = polyfillPromiseWithResolvers;\n\n/**\n * A no-operation function.\n */\nexport const noop = () => {/* NO OP */ };\n\n/**\n * Executes a promise or a function that returns a promise and ignores any errors or results.\n * @param p - The promise or function that returns a promise to be executed.\n */\nexport function fireAndForget(p: Promise<any> | (() => Promise<any>)): void {\n    if (typeof p == \"function\") return fireAndForget(p());\n    p.then(noop).catch(noop);\n}\n"],"names":[],"mappings":"AACA;;;;;AAKG;MACU,KAAK,GAAG,CAAI,EAAU,EAAE,MAAU,KAAgB;AAC3D,IAAA,OAAO,IAAI,OAAO,CAAC,CAAC,GAAG,KAAI;QACvB,UAAU,CAAC,MAAK;YACZ,GAAG,CAAC,MAAO,CAAC,CAAC;SAChB,EAAE,EAAE,CAAC,CAAC;AACX,KAAC,CAAC,CAAC;AACP,EAAE;AAQF;;;;AAIG;AACH,SAAS,4BAA4B,GAAA;AACjC,IAAA,IAAI,OAAoE,CAAC;AACzE,IAAA,IAAI,MAAmE,CAAC;IACxE,MAAM,OAAO,GAAG,IAAI,OAAO,CAAI,CAAC,GAAG,EAAE,GAAG,KAAI;QACxC,OAAO,GAAG,GAAG,CAAC;QACd,MAAM,GAAG,GAAG,CAAC;AACjB,KAAC,CAAC,CAAC;AACH,IAAA,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,CAAA;AACvC,CAAC;AAED;;;;AAIG;AACI,MAAM,mBAAmB,GAAG,6BAA6B;AAEhE;;AAEG;MACU,IAAI,GAAG,MAAK,IAAgB;AAEzC;;;AAGG;AACG,SAAU,aAAa,CAAC,CAAsC,EAAA;IAChE,IAAI,OAAO,CAAC,IAAI,UAAU;AAAE,QAAA,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC7B;;;;"}