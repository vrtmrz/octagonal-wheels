{"version":3,"file":"PersistentMap.js","sources":["../../src/dataobject/PersistentMap.ts"],"sourcesContent":["/**\n * The Map, which can keep the data.\n */\n\nimport { scheduleTask } from \"../concurrency/task\";\n\nconst YieldOperationNumbers = 100;\n\n/**\n * Represents a persistent map that stores key-value pairs in the browser's local storage.\n * The map is automatically saved to the local storage whenever a change is made with some delays.\n *\n * @template T - The type of values stored in the map.\n */\nexport class PersistentMap<T> {\n    _setCount = YieldOperationNumbers;\n    _map: Map<string, T>;\n    _key: string;\n\n    flush(): void {\n        this._save();\n    }\n    _save(): void {\n        localStorage.setItem(this._key, JSON.stringify([...this._map.entries()]))\n    }\n    _load(suppliedEntries: readonly (readonly [string, T])[] = []): Promise<void> {\n        try {\n            const savedSource = localStorage.getItem(this._key) ?? \"\";\n            const sourceToParse = (savedSource === \"\") ? \"[]\" : savedSource;\n            const obj = JSON.parse(sourceToParse) as [string, T][];\n            this._map = new Map([...obj, ...suppliedEntries]);\n        } catch (ex) {\n            console.log(`Map read error : ${this._key}`);\n            console.dir(ex);\n            this._map = new Map([...suppliedEntries]);\n        }\n        return Promise.resolve();\n    }\n    _queueSave(): void {\n        this._setCount--;\n        // If we had processed too many operation while in the short time, save once.\n        if (this._setCount < 0) {\n            this._setCount = YieldOperationNumbers;\n            scheduleTask(`save-map-${this._key}`, 0, () => this._save());\n        }\n        // Or schedule saving.\n        scheduleTask(`save-map-${this._key}`, 150, () => this._save());\n    }\n    delete(key: string): boolean {\n        const ret = this._map.delete(key);\n        this._queueSave();\n        return ret;\n    }\n    has(key: string): boolean {\n        return this._map.has(key);\n    }\n    set(key: string, value: T): this {\n        this._map.set(key, value);\n        this._queueSave();\n        return this;\n    }\n\n    clear(): void {\n        this._map = new Map();\n        this._save();\n    }\n    get(key: string, defValue?: T): T | undefined {\n        const v = this._map.get(key);\n        if (v === undefined) return defValue;\n        return v;\n    }\n    constructor(key: string, entries?: readonly (readonly [string, T])[]) {\n        this._key = key;\n        this._map = new Map(entries ?? []);\n        this._load(entries)\n    }\n    // get ready():Promise<boolean>{\n\n    // }\n\n}"],"names":[],"mappings":"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"}