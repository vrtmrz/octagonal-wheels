{"version":3,"file":"object.js","sources":["../src/object.ts"],"sourcesContent":["\n/**\n * Extracts properties from an object based on a template object.\n * Only properties present in the template object will be included in the result.\n *\n * @template T - The type of the template object.\n * @param {Partial<T>} template - The template object containing the properties to extract.\n * @param {T} obj - The object from which to extract properties.\n * @returns {Partial<T>} - A new object containing the extracted properties.\n */\nexport function extractObject<T>(template: Partial<T>, obj: T): Partial<T> {\n    const ret = { ...template };\n    for (const key in ret) {\n        ret[key] = obj[key];\n    }\n    return ret;\n}\n\n\n/**\n * Checks if two objects are different.\n * \n * @param a - The first object to compare.\n * @param b - The second object to compare.\n * @param ignoreUndefined - Optional. If set to true, undefined properties will be ignored during comparison. Default is false.\n * @returns True if the objects are different, false otherwise.\n */\nexport function isObjectDifferent(a: any, b: any, ignoreUndefined: boolean = false): boolean {\n    if (typeof a !== typeof b) {\n        return true;\n    }\n    if (typeof a === \"object\") {\n        if (a === null || b === null) {\n            return a !== b;\n        }\n        const keys = [...new Set([...Object.keys(a), ...Object.keys(b)])];\n        if (ignoreUndefined) {\n            return keys.map(key => a?.[key] !== undefined && b?.[key] !== undefined && isObjectDifferent(a?.[key], b?.[key])).some(e => e == true);\n        }\n        return keys.map(key => isObjectDifferent(a?.[key], b?.[key])).some(e => e == true);\n    } else {\n        return a !== b;\n    }\n}"],"names":[],"mappings":"AACA;;;;;;;;AAQG;AACa,SAAA,aAAa,CAAI,QAAoB,EAAE,GAAM,EAAA;AACzD,IAAA,MAAM,GAAG,GAAG,EAAE,GAAG,QAAQ,EAAE,CAAC;AAC5B,IAAA,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;QACnB,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;KACvB;AACD,IAAA,OAAO,GAAG,CAAC;AACf,CAAC;AAGD;;;;;;;AAOG;AACG,SAAU,iBAAiB,CAAC,CAAM,EAAE,CAAM,EAAE,kBAA2B,KAAK,EAAA;AAC9E,IAAA,IAAI,OAAO,CAAC,KAAK,OAAO,CAAC,EAAE;AACvB,QAAA,OAAO,IAAI,CAAC;KACf;AACD,IAAA,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;QACvB,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE;YAC1B,OAAO,CAAC,KAAK,CAAC,CAAC;SAClB;QACD,MAAM,IAAI,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClE,IAAI,eAAe,EAAE;YACjB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,SAAS,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,SAAS,IAAI,iBAAiB,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC;SAC1I;AACD,QAAA,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,iBAAiB,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC;KACtF;SAAM;QACH,OAAO,CAAC,KAAK,CAAC,CAAC;KAClB;AACL;;;;"}