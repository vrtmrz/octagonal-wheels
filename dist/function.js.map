{"version":3,"file":"function.js","sources":["../src/function.ts"],"sourcesContent":["type ThrottledFunction<T extends (...args: any[]) => any> = (...args: Parameters<T>) => void;\n\n/**\n * Thinning out the execution of a function by delaying subsequent invocations\n * until a specified timeout has passed since the last invocation.\n *\n * @template T - The type of the function being throttled.\n * @param func - The function to be throttled.\n * @param timeout - The timeout value in milliseconds.\n * @returns A throttled function that delays subsequent invocations.\n */\nexport const throttle = <T extends (...args: any[]) => any>(func: T, timeout: number): ThrottledFunction<T> => {\n    let timer: ReturnType<typeof setTimeout> | undefined;\n    let lastTime: number = 0; // initialize lastTime to 0\n    return (...args: Parameters<T>) => {\n\n        if (!lastTime) {\n            func(...args);\n            lastTime = Date.now();\n        } else {\n            clearTimeout(timer);\n            const delayTime = timeout - (Date.now() - lastTime);\n            timer = setTimeout(() => {\n                func(...args);\n                lastTime = Date.now();\n            }, delayTime);\n        }\n    };\n};\n"],"names":[],"mappings":"AAEA;;;;;;;;AAQG;MACU,QAAQ,GAAG,CAAoC,IAAO,EAAE,OAAe,KAA0B;AAC1G,IAAA,IAAI,KAAgD;AACpD,IAAA,IAAI,QAAQ,GAAW,CAAC,CAAC;AACzB,IAAA,OAAO,CAAC,GAAG,IAAmB,KAAI;QAE9B,IAAI,CAAC,QAAQ,EAAE;AACX,YAAA,IAAI,CAAC,GAAG,IAAI,CAAC;AACb,YAAA,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE;;aAClB;YACH,YAAY,CAAC,KAAK,CAAC;AACnB,YAAA,MAAM,SAAS,GAAG,OAAO,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,QAAQ,CAAC;AACnD,YAAA,KAAK,GAAG,UAAU,CAAC,MAAK;AACpB,gBAAA,IAAI,CAAC,GAAG,IAAI,CAAC;AACb,gBAAA,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE;aACxB,EAAE,SAAS,CAAC;;AAErB,KAAC;AACL;;;;"}