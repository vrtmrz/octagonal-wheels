{"version":3,"file":"polyfill.js","sources":["../../src/common/polyfill.ts"],"sourcesContent":["const FallbackWeakRef = \"WeakRef\" in globalThis ? globalThis.WeakRef : (class WeakRef {\n    // If WeakRef implementation has been missing, we will use a simple polyfill\n    // This is for old iOS devices that do not support WeakRef (before Safari 14.5), and for Android devices that use old WebView engines.\n    // I know that Obsidian now supports Safari 14.5 and above now, but I will keep this for compatibility with older versions.\n    // Note: This is a `StrongRef`. It is not a `WeakRef` in the true sense. Just for compatibility.\n\n    //@ts-ignore \n    static __ = console.warn(\"WeakRef is not supported in this environment. Using a fallback implementation. This may cause memory leaks. Please consider upgrading your browser or Node.js version. If you are on Android, please consider changing your WebView engine to a newer version. It is on the Developer Settings.\");\n    __target;\n    constructor(target: any) {\n        this.__target = target;\n    }\n    deref() {\n        return this.__target;\n    }\n}) as unknown as typeof WeakRef;\ntype FallbackWeakRef<T extends WeakKey> = WeakRef<T>;\nexport { FallbackWeakRef };"],"names":[],"mappings":";AAAA,MAAM,eAAe,GAAG,SAAS,IAAI,UAAU,GAAG,UAAU,CAAC,OAAO,IAAG,EAAA,GAAC,MAAM,OAAO,CAAA;AASjF,QAAA,WAAA,CAAY,MAAW,EAAA;AADvB,YAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,UAAA,EAAA;;;;;AAAS,aAAA,CAAA;AAEL,YAAA,IAAI,CAAC,QAAQ,GAAG,MAAM;;QAE1B,KAAK,GAAA;YACD,OAAO,IAAI,CAAC,QAAQ;;AAE3B,KAAA;;;;;;AARU,IAAA,MAAA,CAAA,cAAA,CAAA,EAAA,EAAA,IAAA,EAAA;;;;AAAK,QAAA,KAAA,EAAA,OAAO,CAAC,IAAI,CAAC,iSAAiS;AAAE,KAAA,CAAA;;;;;"}